{"ast":null,"code":"var _jsxFileName = \"/Users/vu/Documents/Work/Repositories/co2/src/components/section/Section.js\";\nimport React, { Component } from 'react';\nimport './Section.css';\nimport LineChart from './viz/LineChart';\n\nclass Section extends Component {\n  constructor(props) {\n    super(props);\n    this.renderSwitch = this.renderSwitch.bind(this);\n    this.sectionRef = React.createRef();\n  }\n\n  renderSwitch() {\n    switch (this.props.content.key) {\n      case 'line-chart':\n        return React.createElement(LineChart, {\n          data: this.props.data,\n          content: this.props.content.vizContent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15\n          },\n          __self: this\n        });\n\n      default:\n        return null;\n    }\n  }\n\n  componentDidMount() {\n    this.sectionRef.current.querySelectorAll('.animate').forEach(el => {\n      this.props.animationObserver.observe(el);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"section-wrap line-chart\",\n      ref: this.sectionRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"limit-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"header limited\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"header-span animate right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"A rapid\"), React.createElement(\"span\", {\n      className: \"header-span animate left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"increase.\")), this.props.content.text.content.map((para, index) => {\n      return React.createElement(\"p\", {\n        key: index,\n        className: \"para limited animate blur\",\n        style: {\n          '--animation-speed': '800ms',\n          '--animation-delay': '800ms'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, para.map((segment, index) => {\n        switch (segment.type) {\n          case 'span':\n            return React.createElement(\"span\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44\n              },\n              __self: this\n            }, segment.content);\n\n          case 'sub':\n            return React.createElement(\"sub\", {\n              key: index,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46\n              },\n              __self: this\n            }, segment.content);\n\n          default:\n            return null;\n        }\n      }));\n    })), this.renderSwitch());\n  }\n\n}\n\nexport default Section;","map":{"version":3,"sources":["/Users/vu/Documents/Work/Repositories/co2/src/components/section/Section.js"],"names":["React","Component","LineChart","Section","constructor","props","renderSwitch","bind","sectionRef","createRef","content","key","data","vizContent","componentDidMount","current","querySelectorAll","forEach","el","animationObserver","observe","render","text","map","para","index","segment","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AAEA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAC9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,UAAL,GAAkBR,KAAK,CAACS,SAAN,EAAlB;AACD;;AACDH,EAAAA,YAAY,GAAG;AACb,YAAQ,KAAKD,KAAL,CAAWK,OAAX,CAAmBC,GAA3B;AACE,WAAK,YAAL;AACE,eAAO,oBAAC,SAAD;AAAW,UAAA,IAAI,EAAE,KAAKN,KAAL,CAAWO,IAA5B;AAAkC,UAAA,OAAO,EAAE,KAAKP,KAAL,CAAWK,OAAX,CAAmBG,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACF;AACE,eAAO,IAAP;AAJJ;AAMD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKN,UAAL,CAAgBO,OAAhB,CAAwBC,gBAAxB,CAAyC,UAAzC,EAAqDC,OAArD,CAA6DC,EAAE,IAAI;AACjE,WAAKb,KAAL,CAAWc,iBAAX,CAA6BC,OAA7B,CAAqCF,EAArC;AACD,KAFD;AAGD;;AACDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAyC,MAAA,GAAG,EAAE,KAAKb,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAM,MAAA,SAAS,EAAC,0BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CADF,EAKG,KAAKH,KAAL,CAAWK,OAAX,CAAmBY,IAAnB,CAAwBZ,OAAxB,CAAgCa,GAAhC,CAAoC,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpD,aACE;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,SAAS,EAAC,2BAFZ;AAGE,QAAA,KAAK,EAAE;AACL,+BAAqB,OADhB;AAEL,+BAAqB;AAFhB,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMID,IAAI,CAACD,GAAL,CAAS,CAACG,OAAD,EAAUD,KAAV,KAAoB;AAC/B,gBAAOC,OAAO,CAACC,IAAf;AACE,eAAK,MAAL;AACE,mBAAO;AAAM,cAAA,GAAG,EAAEF,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAmBC,OAAO,CAAChB,OAA3B,CAAP;;AACF,eAAK,KAAL;AACE,mBAAO;AAAK,cAAA,GAAG,EAAEe,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAkBC,OAAO,CAAChB,OAA1B,CAAP;;AACF;AACE,mBAAO,IAAP;AANJ;AAQD,OATG,CANJ,CADF;AAkBD,KAnBA,CALH,CADF,EA2BG,KAAKJ,YAAL,EA3BH,CADF;AA+BD;;AAnD6B;;AAsDhC,eAAeH,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Section.css';\n\nimport LineChart from './viz/LineChart';\n\nclass Section extends Component {\n  constructor(props) {\n    super(props)\n    this.renderSwitch = this.renderSwitch.bind(this)\n    this.sectionRef = React.createRef()\n  }\n  renderSwitch() {\n    switch (this.props.content.key) {\n      case 'line-chart':\n        return <LineChart data={this.props.data} content={this.props.content.vizContent} />\n      default:\n        return null\n    }\n  }\n  componentDidMount() {\n    this.sectionRef.current.querySelectorAll('.animate').forEach(el => {\n      this.props.animationObserver.observe(el)\n    })\n  }\n  render() {\n    return (\n      <div className=\"section-wrap line-chart\" ref={this.sectionRef}>\n        <div className=\"limit-box\">\n          <h2 className=\"header limited\">\n              <span className=\"header-span animate right\">A rapid</span>\n              <span className=\"header-span animate left\">increase.</span>\n          </h2>\n          {this.props.content.text.content.map((para, index) => {\n            return (\n              <p\n                key={index}\n                className=\"para limited animate blur\"\n                style={{\n                  '--animation-speed': '800ms',\n                  '--animation-delay': '800ms'\n              }}>{para.map((segment, index) => {\n                switch(segment.type) {\n                  case 'span':\n                    return <span key={index}>{segment.content}</span>\n                  case 'sub':\n                    return <sub key={index}>{segment.content}</sub>\n                  default:\n                    return null\n                }\n              })}</p>\n            )\n          })}\n        </div>\n        {this.renderSwitch()}\n      </div>\n    )\n  }\n}\n\nexport default Section;\n"]},"metadata":{},"sourceType":"module"}