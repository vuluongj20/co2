{"ast":null,"code":"var _jsxFileName = \"/Users/vuluong/Documents/co2/src/components/section/viz/PolarPlot.js\";\nimport React, { Component } from 'react';\nimport './PolarPlot.scss';\nimport { select, scaleLinear, extent, max, min, lineRadial, curveBasis, easeQuad, easeQuadOut, easeCubic, easeCubicIn, easeCubicOut } from 'd3';\n\nclass PolarPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vizCreated: false,\n      currentState: -1,\n      updateFunc: null\n    };\n    this.createViz = this.createViz.bind(this);\n    this.vizRef = React.createRef();\n  }\n\n  createViz(data) {\n    let margin = 80,\n        radius = Math.min(window.innerWidth - 440, window.innerHeight - 200) / 2,\n        innerRadius = radius - margin,\n        grandDaddy = select('#polar-plot'),\n        svg = grandDaddy.select('.viz-svg-wrap').append('svg').attr('width', radius * 2).attr('height', radius * 2).attr('class', 'viz'),\n        a = scaleLinear().domain([0, 365.25]).range([0, 2 * Math.PI]),\n        r = scaleLinear().domain([0, max(data, (d, i) => {\n      return d.level;\n    })]).range([0, innerRadius]).nice(),\n        totalLength = null,\n        minDate = min(data, function (d) {\n      return d.date;\n    }),\n        xDays = data.map(d => (d.date.getTime() - minDate.getTime()) / (1000 * 60 * 60 * 24)),\n        xDaysParsed = xDays.map(d => Math.floor(d % 365.25)),\n        gradient = svg.append('defs').append('linearGradient').attr('id', 'polar-grad').attr('x1', '30%').attr('x2', '70%').attr('y1', '70%').attr('y2', '30%'),\n        // polarToCartesian & describeArc from wdebeaum, @stackoverflow: https://stackoverflow.com/a/5737245\n    polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {\n      let angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n      return {\n        x: centerX + radius * Math.cos(angleInRadians),\n        y: centerY + radius * Math.sin(angleInRadians)\n      };\n    },\n        describeArc = function (x, y, radius, startAngle, endAngle) {\n      let start = polarToCartesian(x, y, radius, endAngle);\n      let end = polarToCartesian(x, y, radius, startAngle);\n      let largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n      let d = [\"M\", start.x, start.y, \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y].join(\" \");\n      return d;\n    };\n\n    gradient.append('stop').attr('offset', '0%').attr('style', 'stop-color: var(--warm); stop-opacity: 1');\n    gradient.append('stop').attr('offset', '100%').attr('style', 'stop-color: var(--cool); stop-opacity: 1');\n    let rAxis = svg.append('g').attr('class', 'r axis').attr('transform', 'translate(' + radius + ' ' + radius + ')'),\n        aAxis = svg.append('g').attr('class', 'a axis').attr('transform', 'translate(' + radius + ' ' + radius + ')');\n    rAxis.selectAll('circle').data([...r.ticks(5), 320, 340, 360, 380]).enter().append('circle').attr('class', d => {\n      return 'grid-circle' + (d > 300 && d < 400 ? ' secondary' : '');\n    }).attr('r', r);\n    rAxis.append('circle').attr('class', 'grid-circle').attr('r', innerRadius);\n    rAxis.selectAll('g').data([...r.ticks(5).slice(1), 320, 340, 360, 380]).enter().append('text').attr('class', d => {\n      return 'r tick' + (d > 300 && d < 400 ? ' secondary' : '');\n    }).attr('transform', function (d) {\n      return 'translate(' + r(d) * Math.cos(-Math.PI / 12) + ' ' + r(d) * Math.sin(-Math.PI / 12) + ')';\n    }).attr('text-anchor', 'middle').attr('alignment-baseline', 'central').text(function (d) {\n      return d;\n    });\n    aAxis.selectAll('line').data(Array(6)).enter().append('line').attr('class', 'grid-line').attr('x1', 0).attr('x2', 0).attr('y1', -innerRadius).attr('y2', innerRadius).attr('transform', function (_, i) {\n      return 'rotate(' + 30 * i + ')';\n    });\n    aAxis.selectAll('text').data(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']).enter().append('text').attr('class', 'a tick').attr('text-anchor', 'middle').attr('alignment-baseline', 'central').attr('dx', function (_, i) {\n      return (innerRadius + 24) * Math.cos((i / 6 - 1 / 2) * Math.PI);\n    }).attr('dy', function (_, i) {\n      return (innerRadius + 24) * Math.sin((i / 6 - 1 / 2) * Math.PI);\n    }).text(function (d) {\n      return d;\n    });\n    this.setState({\n      vizCreated: true,\n      updateFunc: (to, from) => {\n        let regLineLength = null,\n            yReg = null,\n            newText = to !== -1 ? this.vizRef.current.querySelector('.viz-des-text:nth-child(' + (to + 1) + ')') : null;\n\n        if (to > from) {\n          if (newText) {\n            newText.classList.add('on');\n          }\n\n          let increment = target => {\n            switch (target) {\n              case 0:\n                // Initial\n                // Main data line\n                svg.append('path').attr('class', 'data-line').datum(data.slice(0, 37)).attr('transform', 'translate(' + radius + ' ' + radius + ')').attr('stroke', 'url(#polar-grad)').attr('stroke-width', 1).attr('d', lineRadial().angle(function (_, index) {\n                  return a(xDaysParsed[index]);\n                }).radius(function (d) {\n                  return r(d.level);\n                }).curve(curveBasis));\n                totalLength = grandDaddy.select('.data-line').node().getTotalLength();\n                grandDaddy.select('.data-line').attr(\"stroke-dasharray\", totalLength + \" \" + totalLength).attr(\"stroke-dashoffset\", totalLength).transition().duration(800).ease(easeCubic).attr('stroke-dashoffset', 0);\n                break;\n\n              case 1:\n                // Linear\n                r.domain(extent(data, data => {\n                  return data.level;\n                })).nice(); // Remove unneeded circles and ticks\n\n                grandDaddy.selectAll('.grid-circle').filter((_, i) => {\n                  return i < 4;\n                }).attr('class', 'grid-circle off').transition().duration(1200).ease(easeCubicIn).attr('r', 0);\n                grandDaddy.selectAll('.r.tick').filter((_, i) => {\n                  return i < 3;\n                }).attr('class', 'r tick off').transition().duration(1200).ease(easeCubicIn).attr('transform', 'translate(0 0)'); // Move 400 circle and tick\n\n                grandDaddy.selectAll('.grid-circle:nth-child(5)').transition().duration(800).ease(easeCubicIn).attr('r', r);\n                grandDaddy.selectAll('.r.tick:nth-child(4)').transition().duration(800).ease(easeCubicIn).attr('transform', function (d) {\n                  return 'translate(' + r(d) * Math.cos(-Math.PI / 12) + ' ' + r(d) * Math.sin(-Math.PI / 12) + ')';\n                }); // Add new circles and ticks\n\n                grandDaddy.selectAll('.grid-circle.secondary').attr('class', 'grid-circle secondary on').transition().duration(800).ease(easeCubicIn).attr('r', r);\n                grandDaddy.selectAll('.r.tick.secondary').attr('class', 'r tick secondary on').transition().duration(800).ease(easeCubicIn).attr('transform', function (d) {\n                  return 'translate(' + r(d) * Math.cos(-Math.PI / 12) + ' ' + r(d) * Math.sin(-Math.PI / 12) + ')';\n                });\n                grandDaddy.select('.data-line').transition().duration(800).ease(easeCubicIn).attr('d', lineRadial().angle(function (_, index) {\n                  return a(xDaysParsed[index]);\n                }).radius(function (d) {\n                  return r(d.level);\n                }).curve(curveBasis)).on(\"end\", () => {\n                  let dataLine = grandDaddy.select('.data-line').datum(data).attr('d', lineRadial().angle(function (_, index) {\n                    return a(xDaysParsed[index]);\n                  }).radius(function (d) {\n                    return r(d.level);\n                  }).curve(curveBasis)),\n                      newTotalLength = dataLine.node().getTotalLength();\n                  dataLine.attr(\"stroke-dasharray\", newTotalLength + \" \" + newTotalLength).attr(\"stroke-dashoffset\", newTotalLength).transition().duration(1200).ease(easeCubicOut).attr('stroke-dashoffset', 0);\n                });\n                break;\n\n              case 2:\n                // Quadratic\n                let winterStretch = svg.append('path').attr('class', 'winter stretch').datum(data.slice(3112, 3130)).attr('transform', 'translate(' + radius + ' ' + radius + ')').attr('stroke', 'var(--dark)').attr('fill', 'none').attr('stroke-width', 1).attr('d', lineRadial().angle(function (_, index) {\n                  return a(xDaysParsed[index + 3112]);\n                }).radius(function (d) {\n                  return r(d.level);\n                }).curve(curveBasis));\n                console.log(data.length);\n              //   yReg = xDays.map(d => this.props.content[2].params[0] + this.props.content[2].params[1]*d + this.props.content[2].params[2]*d**2)\n              //   grandDaddy.select('.reg-line').transition()\n              //     .duration(800)\n              //     .ease(easeCubicOut)\n              //     .attr('d', line()\n              //       .x(function(d) { return x(d.date) + margin.left })\n              //       .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //     )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", 0)\n              //     .attr('stroke-dashoffset', 0)\n              //   grandDaddy.select('.reg-line-label-rect')\n              //     .attr('class', 'reg-line-label-rect quadratic')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '7.7em')\n              //   grandDaddy.select('.reg-line-label-text').append('tspan')\n              //     .attr('class', 'quadratic span')\n              //     .text(' + βx\\u00b2')\n              //     .style('opacity', 0)\n              //       .transition()\n              //         .duration(800)\n              //         .ease(easeQuad)\n              //         .style('opacity', 1)\n              //   grandDaddy.selectAll('.reg-line-label-text>tspan:not(.quadratic)')\n              //     .each(function(d) {\n              //       let currentSpan = select(this)\n              //       if (!currentSpan.node().classList.contains('off')) {\n              //         currentSpan.node().classList.add('off')\n              //       }\n              //     })\n              //   break\n              // case 3: // Cosine\n              //   yReg = xDays.map(d => this.props.content[3].params[0]\n              //     + this.props.content[3].params[1]*d\n              //     + this.props.content[3].params[2]*d**2\n              //     + this.props.content[3].params[3]*Math.cos(2*Math.PI*d/365.25 + this.props.content[3].params[4])\n              //   )\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", regLineLength + \" \" + regLineLength)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .attr('d', line()\n              //         .x(function(d) { return x(d.date) + margin.left })\n              //         .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //     )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", 0)\n              //     .attr('stroke-dashoffset', 0)\n              //   grandDaddy.select('.reg-line-label-rect')\n              //     .attr('class', 'reg-line-label-rect cosine')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '15.6em')\n              //   grandDaddy.select('.reg-line-label-text').append('tspan')\n              //     .attr('class', 'cosine span')\n              //     .text(' + cos(2πt + φ)')\n              //     .style('opacity', 0)\n              //       .transition()\n              //         .duration(800)\n              //         .ease(easeQuad)\n              //         .style('opacity', 1)\n              //   grandDaddy.selectAll('.reg-line-label-text>tspan:not(.cosine)')\n              //     .each(function(d) {\n              //       let currentSpan = select(this)\n              //       if (!currentSpan.node().classList.contains('off')) {\n              //         currentSpan.node().classList.add('off')\n              //       }\n              //     })\n              //   break\n\n              default:\n            }\n          };\n\n          for (let i = from; i < to; i++) {\n            let prevText = this.vizRef.current.querySelector('.viz-des-text:nth-child(' + (i + 1) + ')');\n            increment(i + 1);\n\n            if (prevText) {\n              prevText.classList.remove('on');\n              prevText.classList.remove('on-reverse');\n            }\n          }\n        } else if (to < from) {\n          if (newText) {\n            newText.classList.add('on-reverse');\n          }\n\n          let decrement = target => {\n            switch (target) {\n              // case -1:\n              //   let dataLineLength = grandDaddy.select('.data-line').node().getTotalLength()\n              //   grandDaddy.select('.data-line').attr('stroke-dashoffset', 0)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .attr('stroke-dashoffset', -dataLineLength)\n              //       .remove()\n              //   break\n              // case 0: // Initial\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr('stroke-dashoffset', 0)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .attr('stroke-dashoffset', -regLineLength)\n              //       .remove()\n              //   grandDaddy.select('.data-line').attr('class', 'data-line')\n              //   grandDaddy.select('.reg-line-label').style('opacity', 1)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .style('opacity', 0)\n              //       .remove()\n              //   break\n              // case 1: // Linear\n              //   yReg = xDays.map(d => this.props.content[1].params[0] + this.props.content[1].params[1]*d)\n              //   grandDaddy.select('.reg-line').transition()\n              //     .duration(800)\n              //     .ease(easeCubicOut)\n              //     .attr('d', line()\n              //       .x(function(d) { return x(d.date) + margin.left })\n              //       .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //   )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", regLineLength + \" \" + regLineLength)\n              //   grandDaddy.select('.reg-line-label-text>.quadratic.span').style('opacity', 1)\n              //     .transition()\n              //       .duration(320)\n              //       .ease(easeCubicOut)\n              //       .style('opacity', 0)\n              //       .remove()\n              //   grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect linear')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '4.6em')\n              //   setTimeout(() => {\n              //     grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect linear')\n              //   })\n              //   grandDaddy.select('.reg-line-label-text>.linear.span').attr('class', 'linear span on')\n              //   break\n              // case 2: // Quadratic\n              //   yReg = xDays.map(d => this.props.content[2].params[0]\n              //     + this.props.content[2].params[1]*d\n              //     + this.props.content[2].params[2]*d**2)\n              //   grandDaddy.select('.reg-line').transition()\n              //     .duration(800)\n              //     .ease(easeCubicOut)\n              //     .attr('d', line()\n              //       .x(function(d) { return x(d.date) + margin.left })\n              //       .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //   )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", regLineLength + \" \" + regLineLength)\n              //   grandDaddy.select('.reg-line-label-text>.cosine.span').style('opacity', 1)\n              //     .transition()\n              //       .duration(320)\n              //       .ease(easeCubicOut)\n              //       .style('opacity', 0)\n              //       .remove()\n              //   grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect quadratic')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '7.7em')\n              //   setTimeout(() => {\n              //     grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect quadratic')\n              //   })\n              //   grandDaddy.select('.reg-line-label-text>.quadratic.span').attr('class', 'quadratic span on')\n              //   break\n              default:\n            }\n          };\n\n          for (let i = from; i > to; i--) {\n            let prevText = this.vizRef.current.querySelector('.viz-des-text:nth-child(' + (i + 1) + ')');\n            decrement(i - 1);\n\n            if (prevText) {\n              prevText.classList.remove('on');\n              prevText.classList.remove('on-reverse');\n            }\n          }\n        }\n\n        this.setState({\n          currentState: to\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.createViz(this.props.data); // let vizObserver = new IntersectionObserver(\n    //   (entries, observer) => {\n    //     if (entries[0].isIntersecting && !this.state.vizCreated) {\n    //       this.setState({\n    //         vizCreated: true\n    //       }, () => {\n    //         this.createViz(this.props.data)\n    //       })\n    //     }\n    //   },\n    //   {\n    //     rootMargin: '0 0 -70%',\n    //     threshold: 0\n    //   })\n    // vizObserver.observe(this.vizRef.current)\n\n    let vizScrollObserver = new IntersectionObserver((entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          let index = entry.target.dataset.index;\n\n          if (!this.state.vizCreated) {\n            this.createViz(this.props.data);\n          }\n\n          this.state.updateFunc(Number(index), this.state.currentState);\n        }\n      });\n    }, {\n      threshold: 0\n    });\n    document.querySelectorAll('.viz-scroll-anchor').forEach(el => {\n      vizScrollObserver.observe(el);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"polar-plot\",\n      className: \"viz-outer-wrap\",\n      ref: this.vizRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"viz-scroll-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"viz-scroll-anchor\",\n      \"data-index\": \"-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }), this.props.content.map((_, index) => {\n      return React.createElement(\"div\", {\n        className: \"viz-scroll-anchor\",\n        \"data-index\": index,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      });\n    }), React.createElement(\"div\", {\n      className: \"viz-scroll-dummy-anchor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"viz-wrap\",\n      id: \"line-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"viz-svg-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"viz-des-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, this.props.content.map((chunk, index) => {\n      return React.createElement(\"p\", {\n        className: \"viz-des-text\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      }, chunk.des);\n    }))));\n  }\n\n}\n\nexport default PolarPlot;","map":{"version":3,"sources":["/Users/vuluong/Documents/co2/src/components/section/viz/PolarPlot.js"],"names":["React","Component","select","scaleLinear","extent","max","min","lineRadial","curveBasis","easeQuad","easeQuadOut","easeCubic","easeCubicIn","easeCubicOut","PolarPlot","constructor","props","state","vizCreated","currentState","updateFunc","createViz","bind","vizRef","createRef","data","margin","radius","Math","window","innerWidth","innerHeight","innerRadius","grandDaddy","svg","append","attr","a","domain","range","PI","r","d","i","level","nice","totalLength","minDate","date","xDays","map","getTime","xDaysParsed","floor","gradient","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","x","cos","y","sin","describeArc","startAngle","endAngle","start","end","largeArcFlag","join","rAxis","aAxis","selectAll","ticks","enter","slice","text","Array","_","setState","to","from","regLineLength","yReg","newText","current","querySelector","classList","add","increment","target","datum","angle","index","curve","node","getTotalLength","transition","duration","ease","filter","on","dataLine","newTotalLength","winterStretch","console","log","length","prevText","remove","decrement","componentDidMount","vizScrollObserver","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","dataset","Number","threshold","document","querySelectorAll","el","observe","render","content","chunk","des"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAtKF;AAwKD,WAzKD;;AA0KA,eAAK,IAAIjE,CAAC,GAAGuC,IAAb,EAAmBvC,CAAC,GAAGsC,EAAvB,EAA2BtC,CAAC,EAA5B,EAAgC;AAC9B,gBAAIkE,QAAQ,GAAG,KAAKtF,MAAL,CAAY+D,OAAZ,CAAoBC,aAApB,CAAkC,8BAA8B5C,CAAC,GAAG,CAAlC,IAAuC,GAAzE,CAAf;AACA+C,YAAAA,SAAS,CAAC/C,CAAC,GAAG,CAAL,CAAT;;AACA,gBAAIkE,QAAJ,EAAc;AACZA,cAAAA,QAAQ,CAACrB,SAAT,CAAmBsB,MAAnB,CAA0B,IAA1B;AACAD,cAAAA,QAAQ,CAACrB,SAAT,CAAmBsB,MAAnB,CAA0B,YAA1B;AACD;AACF;AACF,SAtLD,MAsLO,IAAI7B,EAAE,GAAGC,IAAT,EAAe;AACpB,cAAIG,OAAJ,EAAa;AACXA,YAAAA,OAAO,CAACG,SAAR,CAAkBC,GAAlB,CAAsB,YAAtB;AACD;;AACD,cAAIsB,SAAS,GAAIpB,MAAD,IAAY;AAC1B,oBAAOA,MAAP;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","sourcesContent":["import React, { Component } from 'react';\nimport './PolarPlot.scss';\nimport { select,\n  scaleLinear, extent,\n  max,\n  min,\n  lineRadial,\n  curveBasis,\n  easeQuad,\n  easeQuadOut,\n  easeCubic,\n  easeCubicIn,\n  easeCubicOut\n } from 'd3';\n\nclass PolarPlot extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      vizCreated: false,\n      currentState: -1,\n      updateFunc: null\n    }\n    this.createViz = this.createViz.bind(this)\n    this.vizRef = React.createRef()\n  }\n  createViz(data) {\n    let margin = 80,\n      radius = Math.min(window.innerWidth - 440, window.innerHeight - 200)/2,\n      innerRadius = radius - margin,\n      grandDaddy = select('#polar-plot'),\n      svg = grandDaddy.select('.viz-svg-wrap')\n      .append('svg')\n        .attr('width', radius*2)\n        .attr('height', radius*2)\n        .attr('class', 'viz'),\n      a = scaleLinear()\n      .domain([0, 365.25])\n      .range([0, 2*Math.PI]),\n      r = scaleLinear()\n      .domain([0, max(data, (d, i) => {return d.level})])\n      .range([0, innerRadius])\n      .nice(),\n      totalLength = null,\n      minDate = min(data, function(d) {return d.date}),\n      xDays = data.map(d => (d.date.getTime() - minDate.getTime())/(1000*60*60*24)),\n      xDaysParsed = xDays.map(d => Math.floor(d % 365.25)),\n      gradient = svg.append('defs').append('linearGradient')\n        .attr('id', 'polar-grad')\n        .attr('x1', '30%')\n        .attr('x2', '70%')\n        .attr('y1', '70%')\n        .attr('y2', '30%'),\n      // polarToCartesian & describeArc from wdebeaum, @stackoverflow: https://stackoverflow.com/a/5737245\n      polarToCartesian = function(centerX, centerY, radius, angleInDegrees) {\n        let angleInRadians = (angleInDegrees-90) * Math.PI / 180.0\n        return {\n          x: centerX + (radius * Math.cos(angleInRadians)),\n          y: centerY + (radius * Math.sin(angleInRadians))\n        }\n      },\n      describeArc = function(x, y, radius, startAngle, endAngle){\n        let start = polarToCartesian(x, y, radius, endAngle)\n        let end = polarToCartesian(x, y, radius, startAngle)\n        let largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\"\n        let d = [\n            \"M\", start.x, start.y,\n            \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y\n        ].join(\" \")\n        return d\n      }\n\n      gradient.append('stop')\n        .attr('offset', '0%')\n        .attr('style', 'stop-color: var(--warm); stop-opacity: 1')\n      gradient.append('stop')\n        .attr('offset', '100%')\n        .attr('style', 'stop-color: var(--cool); stop-opacity: 1')\n\n      let rAxis = svg.append('g')\n        .attr('class', 'r axis')\n        .attr('transform', 'translate(' + radius + ' ' + radius + ')'),\n      aAxis = svg.append('g')\n        .attr('class', 'a axis')\n        .attr('transform', 'translate(' + radius + ' ' + radius + ')')\n\n      rAxis.selectAll('circle')\n        .data([...r.ticks(5), 320, 340, 360, 380])\n        .enter()\n        .append('circle')\n          .attr('class', (d) => {return 'grid-circle' + ((d > 300 && d < 400) ? ' secondary' : '')})\n          .attr('r', r)\n      rAxis.append('circle')\n        .attr('class', 'grid-circle')\n        .attr('r', innerRadius)\n\n      rAxis.selectAll('g')\n        .data([...r.ticks(5).slice(1), 320, 340, 360, 380])\n        .enter()\n        .append('text')\n        .attr('class', (d) => {return 'r tick' + ((d > 300 && d < 400) ? ' secondary' : '')})\n        .attr('transform', function(d) {return 'translate(' + r(d)*Math.cos(-Math.PI/12) + ' ' + r(d)*Math.sin(-Math.PI/12) + ')'})\n        .attr('text-anchor', 'middle')\n        .attr('alignment-baseline', 'central')\n        .text(function (d) {return d})\n\n      aAxis.selectAll('line')\n        .data(Array(6))\n        .enter()\n        .append('line')\n          .attr('class', 'grid-line')\n          .attr('x1', 0)\n          .attr('x2', 0)\n          .attr('y1', -innerRadius)\n          .attr('y2', innerRadius)\n          .attr('transform', function(_, i) {return 'rotate(' + (30*i) + ')'})\n\n      aAxis.selectAll('text')\n        .data(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])\n        .enter()\n        .append('text')\n          .attr('class', 'a tick')\n          .attr('text-anchor', 'middle')\n          .attr('alignment-baseline', 'central')\n          .attr('dx', function(_, i) {return (innerRadius + 24)*Math.cos((i/6 - 1/2)*Math.PI)})\n          .attr('dy', function(_, i) {return (innerRadius + 24)*Math.sin((i/6 - 1/2)*Math.PI)})\n          .text(function (d) {return d})\n\n    this.setState({\n      vizCreated: true,\n      updateFunc: (to, from) => {\n        let regLineLength = null,\n          yReg = null,\n          newText = to !== -1 ? this.vizRef.current.querySelector('.viz-des-text:nth-child(' + (to + 1) + ')') : null\n        if (to > from) {\n          if (newText) {\n            newText.classList.add('on')\n          }\n          let increment = (target) => {\n            switch(target) {\n              case 0: // Initial\n                // Main data line\n                svg.append('path').attr('class', 'data-line')\n                  .datum(data.slice(0, 37))\n                  .attr('transform', 'translate(' + radius + ' ' + radius + ')')\n                  .attr('stroke', 'url(#polar-grad)')\n                  .attr('stroke-width', 1)\n                  .attr('d', lineRadial()\n                    .angle(function(_, index) { return a(xDaysParsed[index]) })\n                    .radius(function(d) { return r(d.level) })\n                    .curve(curveBasis)\n                  )\n                totalLength = grandDaddy.select('.data-line').node().getTotalLength()\n                grandDaddy.select('.data-line').attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\n                  .attr(\"stroke-dashoffset\", totalLength)\n                  .transition()\n                    .duration(800)\n                    .ease(easeCubic)\n                    .attr('stroke-dashoffset', 0)\n                break\n              case 1: // Linear\n                r.domain(extent(data, data => {return data.level})).nice()\n                // Remove unneeded circles and ticks\n                grandDaddy.selectAll('.grid-circle').filter((_, i) => {return i < 4})\n                  .attr('class', 'grid-circle off')\n                  .transition()\n                    .duration(1200)\n                    .ease(easeCubicIn)\n                    .attr('r', 0)\n                grandDaddy.selectAll('.r.tick').filter((_, i) => {return i < 3})\n                  .attr('class', 'r tick off')\n                  .transition()\n                    .duration(1200)\n                    .ease(easeCubicIn)\n                    .attr('transform', 'translate(0 0)')\n                // Move 400 circle and tick\n                grandDaddy.selectAll('.grid-circle:nth-child(5)').transition()\n                  .duration(800)\n                  .ease(easeCubicIn)\n                  .attr('r', r)\n                grandDaddy.selectAll('.r.tick:nth-child(4)')\n                  .transition()\n                    .duration(800)\n                    .ease(easeCubicIn)\n                    .attr('transform', function(d) {return 'translate(' + r(d)*Math.cos(-Math.PI/12) + ' ' + r(d)*Math.sin(-Math.PI/12) + ')'})\n                // Add new circles and ticks\n                grandDaddy.selectAll('.grid-circle.secondary').attr('class', 'grid-circle secondary on').transition()\n                  .duration(800)\n                  .ease(easeCubicIn)\n                  .attr('r', r)\n                grandDaddy.selectAll('.r.tick.secondary').attr('class', 'r tick secondary on').transition()\n                  .duration(800)\n                  .ease(easeCubicIn)\n                  .attr('transform', function(d) {return 'translate(' + r(d)*Math.cos(-Math.PI/12) + ' ' + r(d)*Math.sin(-Math.PI/12) + ')'})\n\n                grandDaddy.select('.data-line')\n                .transition()\n                  .duration(800)\n                  .ease(easeCubicIn)\n                  .attr('d', lineRadial()\n                    .angle(function(_, index) { return a(xDaysParsed[index]) })\n                    .radius(function(d) { return r(d.level) })\n                    .curve(curveBasis))\n                    .on(\"end\", () => {\n                      let dataLine = grandDaddy.select('.data-line')\n                      .datum(data)\n                      .attr('d', lineRadial()\n                        .angle(function(_, index) { return a(xDaysParsed[index]) })\n                        .radius(function(d) { return r(d.level) })\n                        .curve(curveBasis)),\n                      newTotalLength = dataLine.node().getTotalLength()\n                      dataLine.attr(\"stroke-dasharray\", newTotalLength + \" \" + newTotalLength)\n                        .attr(\"stroke-dashoffset\", newTotalLength)\n                        .transition()\n                          .duration(1200)\n                          .ease(easeCubicOut)\n                          .attr('stroke-dashoffset', 0)\n                    })\n                break\n              case 2: // Quadratic\n                let winterStretch = svg.append('path')\n                  .attr('class', 'winter stretch')\n                  .datum(data.slice(3112, 3130))\n                  .attr('transform', 'translate(' + radius + ' ' + radius + ')')\n                  .attr('stroke', 'var(--dark)')\n                  .attr('fill', 'none')\n                  .attr('stroke-width', 1)\n                  .attr('d', lineRadial()\n                    .angle(function(_, index) { return a(xDaysParsed[index+3112]) })\n                    .radius(function(d) { return r(d.level) })\n                    .curve(curveBasis)\n                  )\n                  console.log(data.length)\n              //   yReg = xDays.map(d => this.props.content[2].params[0] + this.props.content[2].params[1]*d + this.props.content[2].params[2]*d**2)\n              //   grandDaddy.select('.reg-line').transition()\n              //     .duration(800)\n              //     .ease(easeCubicOut)\n              //     .attr('d', line()\n              //       .x(function(d) { return x(d.date) + margin.left })\n              //       .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //     )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", 0)\n              //     .attr('stroke-dashoffset', 0)\n              //   grandDaddy.select('.reg-line-label-rect')\n              //     .attr('class', 'reg-line-label-rect quadratic')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '7.7em')\n              //   grandDaddy.select('.reg-line-label-text').append('tspan')\n              //     .attr('class', 'quadratic span')\n              //     .text(' + βx\\u00b2')\n              //     .style('opacity', 0)\n              //       .transition()\n              //         .duration(800)\n              //         .ease(easeQuad)\n              //         .style('opacity', 1)\n              //   grandDaddy.selectAll('.reg-line-label-text>tspan:not(.quadratic)')\n              //     .each(function(d) {\n              //       let currentSpan = select(this)\n              //       if (!currentSpan.node().classList.contains('off')) {\n              //         currentSpan.node().classList.add('off')\n              //       }\n              //     })\n              //   break\n              // case 3: // Cosine\n              //   yReg = xDays.map(d => this.props.content[3].params[0]\n              //     + this.props.content[3].params[1]*d\n              //     + this.props.content[3].params[2]*d**2\n              //     + this.props.content[3].params[3]*Math.cos(2*Math.PI*d/365.25 + this.props.content[3].params[4])\n              //   )\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", regLineLength + \" \" + regLineLength)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .attr('d', line()\n              //         .x(function(d) { return x(d.date) + margin.left })\n              //         .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //     )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", 0)\n              //     .attr('stroke-dashoffset', 0)\n              //   grandDaddy.select('.reg-line-label-rect')\n              //     .attr('class', 'reg-line-label-rect cosine')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '15.6em')\n              //   grandDaddy.select('.reg-line-label-text').append('tspan')\n              //     .attr('class', 'cosine span')\n              //     .text(' + cos(2πt + φ)')\n              //     .style('opacity', 0)\n              //       .transition()\n              //         .duration(800)\n              //         .ease(easeQuad)\n              //         .style('opacity', 1)\n              //   grandDaddy.selectAll('.reg-line-label-text>tspan:not(.cosine)')\n              //     .each(function(d) {\n              //       let currentSpan = select(this)\n              //       if (!currentSpan.node().classList.contains('off')) {\n              //         currentSpan.node().classList.add('off')\n              //       }\n              //     })\n              //   break\n              default:\n            }\n          }\n          for (let i = from; i < to; i++) {\n            let prevText = this.vizRef.current.querySelector('.viz-des-text:nth-child(' + (i + 1) + ')')\n            increment(i + 1)\n            if (prevText) {\n              prevText.classList.remove('on')\n              prevText.classList.remove('on-reverse')\n            }\n          }\n        } else if (to < from) {\n          if (newText) {\n            newText.classList.add('on-reverse')\n          }\n          let decrement = (target) => {\n            switch(target) {\n              // case -1:\n              //   let dataLineLength = grandDaddy.select('.data-line').node().getTotalLength()\n              //   grandDaddy.select('.data-line').attr('stroke-dashoffset', 0)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .attr('stroke-dashoffset', -dataLineLength)\n              //       .remove()\n              //   break\n              // case 0: // Initial\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr('stroke-dashoffset', 0)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .attr('stroke-dashoffset', -regLineLength)\n              //       .remove()\n              //   grandDaddy.select('.data-line').attr('class', 'data-line')\n              //   grandDaddy.select('.reg-line-label').style('opacity', 1)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .style('opacity', 0)\n              //       .remove()\n              //   break\n              // case 1: // Linear\n              //   yReg = xDays.map(d => this.props.content[1].params[0] + this.props.content[1].params[1]*d)\n              //   grandDaddy.select('.reg-line').transition()\n              //     .duration(800)\n              //     .ease(easeCubicOut)\n              //     .attr('d', line()\n              //       .x(function(d) { return x(d.date) + margin.left })\n              //       .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //   )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", regLineLength + \" \" + regLineLength)\n              //   grandDaddy.select('.reg-line-label-text>.quadratic.span').style('opacity', 1)\n              //     .transition()\n              //       .duration(320)\n              //       .ease(easeCubicOut)\n              //       .style('opacity', 0)\n              //       .remove()\n              //   grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect linear')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '4.6em')\n              //   setTimeout(() => {\n              //     grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect linear')\n              //   })\n              //   grandDaddy.select('.reg-line-label-text>.linear.span').attr('class', 'linear span on')\n              //   break\n              // case 2: // Quadratic\n              //   yReg = xDays.map(d => this.props.content[2].params[0]\n              //     + this.props.content[2].params[1]*d\n              //     + this.props.content[2].params[2]*d**2)\n              //   grandDaddy.select('.reg-line').transition()\n              //     .duration(800)\n              //     .ease(easeCubicOut)\n              //     .attr('d', line()\n              //       .x(function(d) { return x(d.date) + margin.left })\n              //       .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //   )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", regLineLength + \" \" + regLineLength)\n              //   grandDaddy.select('.reg-line-label-text>.cosine.span').style('opacity', 1)\n              //     .transition()\n              //       .duration(320)\n              //       .ease(easeCubicOut)\n              //       .style('opacity', 0)\n              //       .remove()\n              //   grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect quadratic')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '7.7em')\n              //   setTimeout(() => {\n              //     grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect quadratic')\n              //   })\n              //   grandDaddy.select('.reg-line-label-text>.quadratic.span').attr('class', 'quadratic span on')\n              //   break\n              default:\n            }\n          }\n          for (let i = from; i > to; i--) {\n            let prevText = this.vizRef.current.querySelector('.viz-des-text:nth-child(' + (i + 1) + ')')\n            decrement(i - 1)\n            if (prevText) {\n              prevText.classList.remove('on')\n              prevText.classList.remove('on-reverse')\n            }\n          }\n        }\n        this.setState({\n          currentState: to\n        })\n      }\n    })\n  }\n  componentDidMount() {\n    this.createViz(this.props.data)\n    // let vizObserver = new IntersectionObserver(\n    //   (entries, observer) => {\n    //     if (entries[0].isIntersecting && !this.state.vizCreated) {\n    //       this.setState({\n    //         vizCreated: true\n    //       }, () => {\n    //         this.createViz(this.props.data)\n    //       })\n    //     }\n    //   },\n    //   {\n    //     rootMargin: '0 0 -70%',\n    //     threshold: 0\n    //   })\n    // vizObserver.observe(this.vizRef.current)\n\n    let vizScrollObserver = new IntersectionObserver(\n      (entries, observer) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            let index = entry.target.dataset.index\n            if (!this.state.vizCreated) {\n              this.createViz(this.props.data)\n            }\n            this.state.updateFunc(Number(index), this.state.currentState)\n          }\n        })\n      },\n      {\n        threshold: 0\n      }\n    )\n    document.querySelectorAll('.viz-scroll-anchor').forEach(el => {\n      vizScrollObserver.observe(el)\n    })\n  }\n  render() {\n    return (\n      <div id=\"polar-plot\" className=\"viz-outer-wrap\" ref={this.vizRef}>\n        <div className=\"viz-scroll-box\">\n          <div className=\"viz-scroll-anchor\" data-index=\"-1\"></div>\n          {this.props.content.map((_, index) => {\n            return (\n              <div className=\"viz-scroll-anchor\" data-index={index} key={index}></div>\n            )\n          })}\n          <div className=\"viz-scroll-dummy-anchor\"></div>\n        </div>\n        <div className=\"viz-wrap\" id=\"line-chart\">\n          <div className=\"viz-svg-wrap\"></div>\n          <div className=\"viz-des-wrap\">\n            {this.props.content.map((chunk, index) => {\n              return (\n                <p className=\"viz-des-text\" key={index}>{chunk.des}</p>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PolarPlot;\n"]},"metadata":{},"sourceType":"module"}