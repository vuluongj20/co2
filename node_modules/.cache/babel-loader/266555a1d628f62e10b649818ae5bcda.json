{"ast":null,"code":"var _jsxFileName = \"/Users/vu/Documents/Work/Repositories/co2/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport * as d3 from 'd3';\nconst styles = {\n  background: '#FFFFFF',\n  invertedBackground: '#060608',\n  dark: '#121214',\n  invertedDark: '#FFFFFF',\n  normal: '#444455',\n  light: '#888899',\n  line: '#E8E8E9',\n  theme: '#4ba824'\n},\n      vizs = [{\n  key: 'line-chart',\n  content: [{\n    state: 'initial',\n    des: 'The original data looks like this.',\n    params: null\n  }, {\n    state: 'linear',\n    des: 'There is a clear and consistent upward trend through the years.',\n    params: [306.06644452, 0.00430901514]\n  }, {\n    state: 'quadratic',\n    des: 'But a quadratic trend line would be a better fit.',\n    params: [314.574751, 0.00210065413, 0.0000000973625567]\n  }, {\n    state: 'cosine',\n    des: 'The levels also have a seasonal component. This could be modeled by adding a cosine term to the function.',\n    params: [314.569048, 0.00210632696, 0.0000000970576557, 2.86111474, -0.554076698]\n  }]\n}];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalData: [],\n      lineChartCreated: false\n    };\n  }\n\n  componentDidMount() {\n    d3.csv('data/weekly_in_situ_co2_mlo.csv').then(data => {\n      data.forEach(function (d) {\n        d.date = d3.timeParse('%Y-%m-%d')(d.date);\n        d.level = +d.level;\n      });\n      this.setState({\n        originalData: data\n      }, () => {\n        let animationObserver = new IntersectionObserver((entries, observer) => {\n          entries.forEach(entry => {\n            if (entry.isIntersecting) {\n              entry.target.classList.add('on');\n            }\n          });\n        }, {\n          threshold: 1\n        });\n        document.querySelectorAll('.animate').forEach(el => {\n          animationObserver.observe(el);\n        });\n        let lineChartObserver = new IntersectionObserver((entries, observer) => {\n          if (entries[0].isIntersecting) {\n            if (entries[0].intersectionRatio === 1 && this.state.lineChartCreated) {// this.state.updateLineChart('initial')\n            } else if (!this.state.lineChartCreated) {\n              this.createLineChart(this.state.originalData);\n              this.setState({\n                lineChartCreated: true\n              });\n            }\n          }\n        }, {\n          threshold: [0.6, 1]\n        });\n        lineChartObserver.observe(document.querySelector('#line-chart'));\n        let lineChartScrollObserver = new IntersectionObserver((entries, observer) => {\n          entries.forEach(entry => {\n            if (entry.isIntersecting) {\n              let index = entry.target.dataset.index,\n                  el = document.querySelector('#line-chart .viz-des-text:nth-child(' + (Number(index) + 1) + ')');\n              el.classList.add('on');\n              el.classList.remove('off');\n              document.querySelectorAll('#line-chart .viz-des-text:not(:nth-child(' + (Number(index) + 1) + '))').forEach(el => {\n                if (el.classList.contains('on')) {\n                  el.classList.add('off');\n                  setTimeout(() => {\n                    el.classList.remove('on');\n                  }, 800);\n                }\n              });\n              this.state.updateLineChart(vizs.lineChart[index].state);\n            }\n          });\n        }, {\n          rootMargin: '0 0 -25%',\n          threshold: 1\n        });\n        document.querySelectorAll('.viz-scroll-anchor').forEach(el => {\n          lineChartScrollObserver.observe(el);\n        });\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"App\",\n      style: {\n        '--background': styles.background,\n        '--inverted-background': styles.invertedBackground,\n        '--dark': styles.dark,\n        '--inverted-dark': styles.invertedDark,\n        '--normal': styles.normal,\n        '--light': styles.light,\n        '--line': styles.line,\n        '--theme': styles.theme,\n        '--theme-readable': styles.themeReadable\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"hero-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"hero-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"hero-span span-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"C\"), React.createElement(\"span\", {\n      className: \"hero-span span-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"O\"), React.createElement(\"sub\", {\n      className: \"hero-span span-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"2\")), React.createElement(\"p\", {\n      className: \"hero-des\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"An exploration into new formats for data visualization, with CO\", React.createElement(\"sub\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"2\"), \" measurements from the Mauna Loa Observatory in Hawaii.\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/vu/Documents/Work/Repositories/co2/src/App.js"],"names":["React","Component","d3","styles","background","invertedBackground","dark","invertedDark","normal","light","line","theme","vizs","key","content","state","des","params","App","constructor","props","originalData","lineChartCreated","componentDidMount","csv","then","data","forEach","d","date","timeParse","level","setState","animationObserver","IntersectionObserver","entries","observer","entry","isIntersecting","target","classList","add","threshold","document","querySelectorAll","el","observe","lineChartObserver","intersectionRatio","createLineChart","querySelector","lineChartScrollObserver","index","dataset","Number","remove","contains","setTimeout","updateLineChart","lineChart","rootMargin","render","themeReadable"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport * as d3 from 'd3'\n\nconst styles = {\n  background: '#FFFFFF',\n  invertedBackground: '#060608',\n  dark: '#121214',\n  invertedDark: '#FFFFFF',\n  normal: '#444455',\n  light: '#888899',\n  line: '#E8E8E9',\n  theme: '#4ba824'\n},\nvizs = [\n  {\n    key: 'line-chart',\n    content: [\n      {\n        state: 'initial',\n        des: 'The original data looks like this.',\n        params: null\n      },\n      {\n        state: 'linear',\n        des: 'There is a clear and consistent upward trend through the years.',\n        params: [\n          306.06644452,\n          0.00430901514\n        ]\n      },\n      {\n        state: 'quadratic',\n        des: 'But a quadratic trend line would be a better fit.',\n        params: [\n          314.574751,\n          0.00210065413,\n          0.0000000973625567\n        ]\n      },\n      {\n        state: 'cosine',\n        des: 'The levels also have a seasonal component. This could be modeled by adding a cosine term to the function.',\n        params: [\n          314.569048,\n          0.00210632696,\n          0.0000000970576557,\n          2.86111474,\n          -0.554076698]\n      }\n    ]\n  }\n]\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      originalData: [],\n      lineChartCreated: false\n    }\n  }\n  componentDidMount() {\n    d3.csv('data/weekly_in_situ_co2_mlo.csv').then(data => {\n      data.forEach(function(d) {\n        d.date = d3.timeParse('%Y-%m-%d')(d.date)\n        d.level = +d.level\n      })\n      this.setState({\n        originalData: data\n      }, () => {\n        let animationObserver = new IntersectionObserver(\n          (entries, observer) => {\n            entries.forEach((entry) => {\n              if (entry.isIntersecting) {\n                entry.target.classList.add('on')\n              }\n            })\n          },\n          {\n            threshold: 1\n          })\n        document.querySelectorAll('.animate').forEach(el => {\n          animationObserver.observe(el)\n        })\n\n        let lineChartObserver = new IntersectionObserver(\n          (entries, observer) => {\n            if (entries[0].isIntersecting) {\n              if (entries[0].intersectionRatio === 1 && this.state.lineChartCreated) {\n                // this.state.updateLineChart('initial')\n              } else if (!this.state.lineChartCreated) {\n                this.createLineChart(this.state.originalData)\n                this.setState({lineChartCreated: true})\n              }\n            }\n          },\n          {\n            threshold: [0.6, 1]\n          })\n        lineChartObserver.observe(document.querySelector('#line-chart'))\n\n        let lineChartScrollObserver = new IntersectionObserver(\n          (entries, observer) => {\n            entries.forEach((entry) => {\n              if (entry.isIntersecting) {\n                let index = entry.target.dataset.index,\n                  el = document.querySelector('#line-chart .viz-des-text:nth-child(' + (Number(index) + 1) + ')')\n                el.classList.add('on')\n                el.classList.remove('off')\n                document.querySelectorAll('#line-chart .viz-des-text:not(:nth-child(' + (Number(index) + 1) + '))').forEach(el => {\n                  if (el.classList.contains('on')) {\n                    el.classList.add('off')\n                    setTimeout(() => {\n                      el.classList.remove('on')\n                    }, 800)\n                  }\n                })\n                this.state.updateLineChart(vizs.lineChart[index].state)\n              }\n            })\n          },\n          {\n            rootMargin: '0 0 -25%',\n            threshold: 1\n          })\n          document.querySelectorAll('.viz-scroll-anchor').forEach(el => {\n            lineChartScrollObserver.observe(el)\n          })\n      })\n    })\n  }\n  render() {\n    return (\n      <div\n        id=\"App\"\n        style={{\n            '--background': styles.background,\n            '--inverted-background': styles.invertedBackground,\n            '--dark': styles.dark,\n            '--inverted-dark': styles.invertedDark,\n            '--normal': styles.normal,\n            '--light': styles.light,\n            '--line': styles.line,\n            '--theme': styles.theme,\n            '--theme-readable': styles.themeReadable\n          }}>\n          <div className=\"hero-wrap\">\n            <h1 className=\"hero-text\">\n              <span className=\"hero-span span-1\">C</span>\n              <span className=\"hero-span span-2\">O</span>\n              <sub className=\"hero-span span-3\">2</sub>\n            </h1>\n            <p className=\"hero-des\">\n              An exploration into new formats for data visualization, with CO<sub>2</sub> measurements from the Mauna Loa Observatory in Hawaii.\n            </p>\n          </div>\n          \n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}