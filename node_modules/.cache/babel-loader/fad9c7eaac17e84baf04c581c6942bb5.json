{"ast":null,"code":"var _jsxFileName = \"/Users/vuluong/co2/src/components/section/viz/PolarPlot.js\";\nimport React, { Component } from 'react';\nimport './PolarPlot.scss';\nimport { select, scaleLinear, extent, max, min, lineRadial, curveBasis, easeQuad, easeQuadOut, easeCubic, easeCubicOut } from 'd3';\n\nclass PolarPlot extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vizCreated: false,\n      currentState: -1,\n      updateFunc: null\n    };\n    this.createViz = this.createViz.bind(this);\n    this.vizRef = React.createRef();\n  }\n\n  createViz(data) {\n    let margin = 80,\n        radius = Math.min(window.innerWidth - 440, window.innerHeight - 200) / 2,\n        innerRadius = radius - margin,\n        grandDaddy = select('#polar-plot'),\n        svg = grandDaddy.select('.viz-svg-wrap').append('svg').attr('width', radius * 2).attr('height', radius * 2).attr('class', 'viz'),\n        a = scaleLinear().domain([0, 365.25]).range([0, 2 * Math.PI]),\n        r = scaleLinear().domain([0, max(data, (d, i) => {\n      return d.level;\n    })]).range([0, innerRadius]).nice(),\n        totalLength = null,\n        minDate = min(data, function (d) {\n      return d.date;\n    }),\n        xDays = data.map(d => (d.date.getTime() - minDate.getTime()) / (1000 * 60 * 60 * 24)),\n        xDaysParsed = xDays.map(d => Math.floor(d % 365.25));\n    let rAxis = svg.append('g').attr('class', 'r axis').attr('transform', 'translate(' + radius + ' ' + radius + ')'),\n        aAxis = svg.append('g').attr('class', 'a axis').attr('transform', 'translate(' + radius + ' ' + radius + ')');\n    rAxis.selectAll('circle').data([...r.ticks(5), 320, 340, 360, 380]).enter().append('circle').attr('class', d => {\n      return 'grid-circle' + (d > 300 && d < 400 ? ' secondary' : '');\n    }).attr('r', r);\n    rAxis.append('circle').attr('class', 'grid-circle').attr('r', innerRadius);\n    rAxis.selectAll('text').data(r.ticks(5).slice(1)).enter().append('text').attr('class', 'r tick').attr('text-anchor', 'middle').attr('alignment-baseline', 'central').attr('dx', function (d) {\n      return r(d) * Math.cos(-Math.PI / 12);\n    }).attr('dy', function (d) {\n      return r(d) * Math.sin(-Math.PI / 12);\n    }).text(function (d) {\n      return d;\n    });\n    aAxis.selectAll('line').data(Array(6)).enter().append('line').attr('class', 'grid-line').attr('x1', 0).attr('x2', 0).attr('y1', -innerRadius).attr('y2', innerRadius).attr('transform', function (_, i) {\n      return 'rotate(' + 30 * i + ')';\n    });\n    aAxis.selectAll('text').data(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']).enter().append('text').attr('class', 'r tick').attr('text-anchor', 'middle').attr('alignment-baseline', 'central').attr('dx', function (_, i) {\n      return (innerRadius + 24) * Math.cos((i / 6 - 1 / 2) * Math.PI);\n    }).attr('dy', function (_, i) {\n      return (innerRadius + 24) * Math.sin((i / 6 - 1 / 2) * Math.PI);\n    }).text(function (d) {\n      return d;\n    });\n    this.setState({\n      vizCreated: true,\n      updateFunc: (to, from) => {\n        let regLineLength = null,\n            yReg = null,\n            newText = to !== -1 ? this.vizRef.current.querySelector('.viz-des-text:nth-child(' + (to + 1) + ')') : null;\n\n        if (to > from) {\n          if (newText) {\n            newText.classList.add('on');\n          }\n\n          let increment = target => {\n            switch (target) {\n              case 0:\n                // Initial\n                // Main data line\n                let dataLine = svg.append('path').datum(data.slice(0, 38)).attr('class', 'data-line').attr('transform', 'translate(' + radius + ' ' + radius + ')').attr('d', lineRadial().angle(function (_, index) {\n                  return a(xDaysParsed[index]);\n                }).radius(function (d) {\n                  return r(d.level);\n                }).curve(curveBasis)),\n                    totalLength = dataLine.node().getTotalLength();\n                dataLine.attr(\"stroke-dasharray\", totalLength + \" \" + totalLength).attr(\"stroke-dashoffset\", totalLength).transition().duration(800).ease(easeCubic).attr('stroke-dashoffset', 0);\n                break;\n\n              case 1:\n                // Linear\n                r.domain(extent(data, data => {\n                  return data.level;\n                }));\n                grandDaddy.selectAll('.grid-circle').filter((_, i) => {\n                  return i < 4;\n                }).transition().duration(800).ease(easeCubic).attr('r', 0);\n                grandDaddy.selectAll('.grid-circle:nth-child(5)').transition().duration(800).ease(easeCubic).attr('r', r);\n                grandDaddy.selectAll('.grid-circle.secondary').attr('class', 'grid-circle').transition().duration(800).ease(easeCubic).attr('r', r);\n                grandDaddy.select('.data-line').transition().duration(600).ease(easeCubic).attr('d', lineRadial().angle(function (_, index) {\n                  return a(xDaysParsed[index]);\n                }).radius(function (d) {\n                  return r(d.level);\n                }).curve(curveBasis)).on(\"end\", () => {\n                  let dataLine = grandDaddy.select('.data-line').datum(data).attr('d', lineRadial().angle(function (_, index) {\n                    return a(xDaysParsed[index]);\n                  }).radius(function (d) {\n                    return r(d.level);\n                  }).curve(curveBasis)),\n                      newTotalLength = dataLine.node().getTotalLength();\n                  dataLine.attr(\"stroke-dasharray\", newTotalLength + \" \" + newTotalLength).attr(\"stroke-dashoffset\", newTotalLength).transition().duration(1200).ease(easeCubic).attr('stroke-dashoffset', 0);\n                }); // let regLine = svg.append('path')\n                //   .datum(data)\n                //   .attr('class', 'reg-line')\n                //   .attr('d', line()\n                //     .x(function(d) { return x(d.date) + margin.left })\n                //     .y(function(d, i) {return y(yReg[i]) + margin.top })\n                // ),\n                // regLineLabel = svg.append('g')\n                //   .attr('class', 'reg-line-label')\n                //   .attr('transform',\n                //     'translate('\n                //     + (x(data[Math.ceil(data.length*0.52)]['date']) + margin.left + 60)\n                //     + ', '\n                //     + (y(yReg[Math.ceil(yReg.length*0.52)]) + margin.top + 20)\n                //     + ')'\n                //   )\n                // grandDaddy.select('.bottom-axis').raise()\n                // regLineLabel.style('opacity', 0)\n                //   .transition()\n                //     .duration(720)\n                //     .ease(easeQuad)\n                //     .style('opacity', 1)\n                // regLineLabel.append('rect')\n                //   .attr('class', 'reg-line-label-rect linear')\n                //   .attr('rx', 4)\n                //   .attr('ry', 4)\n                //   .style('width', '4.6em')\n                // let regLineLabelText = regLineLabel.append('text')\n                //     .attr('class', 'reg-line-label-text')\n                // regLineLabelText.append('tspan')\n                //     .attr('class', 'linear span')\n                //     .text('y = αx')\n                // regLineLength = regLine.node().getTotalLength()\n                // regLine.attr(\"stroke-dasharray\", regLineLength + \" \" + regLineLength)\n                //   .attr(\"stroke-dashoffset\", regLineLength)\n                //   .transition()\n                //     .duration(800)\n                //     .ease(easeCubicOut)\n                //     .attr('stroke-dashoffset', 0)\n                // grandDaddy.select('.data-line').attr('class', 'data-line faded')\n                // grandDaddy.selectAll('.reg-line-label-text>tspan:not(.linear)')\n                //   .each(function(d) {\n                //     let currentSpan = select(this)\n                //     if (!currentSpan.node().classList.contains('off')) {\n                //       currentSpan.node().classList.add('off')\n                //     }\n                //   })\n\n                break;\n              // case 2: // Quadratic\n              //   yReg = xDays.map(d => this.props.content[2].params[0] + this.props.content[2].params[1]*d + this.props.content[2].params[2]*d**2)\n              //   grandDaddy.select('.reg-line').transition()\n              //     .duration(800)\n              //     .ease(easeCubicOut)\n              //     .attr('d', line()\n              //       .x(function(d) { return x(d.date) + margin.left })\n              //       .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //     )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", 0)\n              //     .attr('stroke-dashoffset', 0)\n              //   grandDaddy.select('.reg-line-label-rect')\n              //     .attr('class', 'reg-line-label-rect quadratic')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '7.7em')\n              //   grandDaddy.select('.reg-line-label-text').append('tspan')\n              //     .attr('class', 'quadratic span')\n              //     .text(' + βx\\u00b2')\n              //     .style('opacity', 0)\n              //       .transition()\n              //         .duration(800)\n              //         .ease(easeQuad)\n              //         .style('opacity', 1)\n              //   grandDaddy.selectAll('.reg-line-label-text>tspan:not(.quadratic)')\n              //     .each(function(d) {\n              //       let currentSpan = select(this)\n              //       if (!currentSpan.node().classList.contains('off')) {\n              //         currentSpan.node().classList.add('off')\n              //       }\n              //     })\n              //   break\n              // case 3: // Cosine\n              //   yReg = xDays.map(d => this.props.content[3].params[0]\n              //     + this.props.content[3].params[1]*d\n              //     + this.props.content[3].params[2]*d**2\n              //     + this.props.content[3].params[3]*Math.cos(2*Math.PI*d/365.25 + this.props.content[3].params[4])\n              //   )\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", regLineLength + \" \" + regLineLength)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .attr('d', line()\n              //         .x(function(d) { return x(d.date) + margin.left })\n              //         .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //     )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", 0)\n              //     .attr('stroke-dashoffset', 0)\n              //   grandDaddy.select('.reg-line-label-rect')\n              //     .attr('class', 'reg-line-label-rect cosine')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '15.6em')\n              //   grandDaddy.select('.reg-line-label-text').append('tspan')\n              //     .attr('class', 'cosine span')\n              //     .text(' + cos(2πt + φ)')\n              //     .style('opacity', 0)\n              //       .transition()\n              //         .duration(800)\n              //         .ease(easeQuad)\n              //         .style('opacity', 1)\n              //   grandDaddy.selectAll('.reg-line-label-text>tspan:not(.cosine)')\n              //     .each(function(d) {\n              //       let currentSpan = select(this)\n              //       if (!currentSpan.node().classList.contains('off')) {\n              //         currentSpan.node().classList.add('off')\n              //       }\n              //     })\n              //   break\n\n              default:\n            }\n          };\n\n          for (let i = from; i < to; i++) {\n            let prevText = this.vizRef.current.querySelector('.viz-des-text:nth-child(' + (i + 1) + ')');\n            increment(i + 1);\n\n            if (prevText) {\n              prevText.classList.remove('on');\n              prevText.classList.remove('on-reverse');\n            }\n          }\n        } else if (to < from) {\n          if (newText) {\n            newText.classList.add('on-reverse');\n          }\n\n          let decrement = target => {\n            console.log(target);\n\n            switch (target) {\n              // case -1:\n              //   let dataLineLength = grandDaddy.select('.data-line').node().getTotalLength()\n              //   grandDaddy.select('.data-line').attr('stroke-dashoffset', 0)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .attr('stroke-dashoffset', -dataLineLength)\n              //       .remove()\n              //   break\n              // case 0: // Initial\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr('stroke-dashoffset', 0)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .attr('stroke-dashoffset', -regLineLength)\n              //       .remove()\n              //   grandDaddy.select('.data-line').attr('class', 'data-line')\n              //   grandDaddy.select('.reg-line-label').style('opacity', 1)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .style('opacity', 0)\n              //       .remove()\n              //   break\n              // case 1: // Linear\n              //   yReg = xDays.map(d => this.props.content[1].params[0] + this.props.content[1].params[1]*d)\n              //   grandDaddy.select('.reg-line').transition()\n              //     .duration(800)\n              //     .ease(easeCubicOut)\n              //     .attr('d', line()\n              //       .x(function(d) { return x(d.date) + margin.left })\n              //       .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //   )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", regLineLength + \" \" + regLineLength)\n              //   grandDaddy.select('.reg-line-label-text>.quadratic.span').style('opacity', 1)\n              //     .transition()\n              //       .duration(320)\n              //       .ease(easeCubicOut)\n              //       .style('opacity', 0)\n              //       .remove()\n              //   grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect linear')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '4.6em')\n              //   setTimeout(() => {\n              //     grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect linear')\n              //   })\n              //   grandDaddy.select('.reg-line-label-text>.linear.span').attr('class', 'linear span on')\n              //   break\n              // case 2: // Quadratic\n              //   yReg = xDays.map(d => this.props.content[2].params[0]\n              //     + this.props.content[2].params[1]*d\n              //     + this.props.content[2].params[2]*d**2)\n              //   grandDaddy.select('.reg-line').transition()\n              //     .duration(800)\n              //     .ease(easeCubicOut)\n              //     .attr('d', line()\n              //       .x(function(d) { return x(d.date) + margin.left })\n              //       .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //   )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", regLineLength + \" \" + regLineLength)\n              //   grandDaddy.select('.reg-line-label-text>.cosine.span').style('opacity', 1)\n              //     .transition()\n              //       .duration(320)\n              //       .ease(easeCubicOut)\n              //       .style('opacity', 0)\n              //       .remove()\n              //   grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect quadratic')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '7.7em')\n              //   setTimeout(() => {\n              //     grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect quadratic')\n              //   })\n              //   grandDaddy.select('.reg-line-label-text>.quadratic.span').attr('class', 'quadratic span on')\n              //   break\n              default:\n            }\n          };\n\n          for (let i = from; i > to; i--) {\n            let prevText = this.vizRef.current.querySelector('.viz-des-text:nth-child(' + (i + 1) + ')');\n            console.log('hey');\n            decrement(i - 1);\n\n            if (prevText) {\n              prevText.classList.remove('on');\n              prevText.classList.remove('on-reverse');\n            }\n          }\n        }\n\n        this.setState({\n          currentState: to\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.createViz(this.props.data); // let vizObserver = new IntersectionObserver(\n    //   (entries, observer) => {\n    //     if (entries[0].isIntersecting && !this.state.vizCreated) {\n    //       this.setState({\n    //         vizCreated: true\n    //       }, () => {\n    //         this.createViz(this.props.data)\n    //       })\n    //     }\n    //   },\n    //   {\n    //     rootMargin: '0 0 -70%',\n    //     threshold: 0\n    //   })\n    // vizObserver.observe(this.vizRef.current)\n\n    let vizScrollObserver = new IntersectionObserver((entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          let index = entry.target.dataset.index;\n          console.log(index);\n\n          if (!this.state.vizCreated) {\n            this.createViz(this.props.data);\n          }\n\n          this.state.updateFunc(Number(index), this.state.currentState);\n        }\n      });\n    }, {\n      threshold: 0\n    });\n    document.querySelectorAll('.viz-scroll-anchor').forEach(el => {\n      vizScrollObserver.observe(el);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"polar-plot\",\n      className: \"viz-outer-wrap\",\n      ref: this.vizRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"viz-scroll-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"viz-scroll-anchor\",\n      \"data-index\": \"-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }), this.props.content.map((_, index) => {\n      return React.createElement(\"div\", {\n        className: \"viz-scroll-anchor\",\n        \"data-index\": index,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      });\n    }), React.createElement(\"div\", {\n      className: \"viz-scroll-dummy-anchor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"viz-wrap\",\n      id: \"line-chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"viz-svg-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"viz-des-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      },\n      __self: this\n    }, this.props.content.map((chunk, index) => {\n      return React.createElement(\"p\", {\n        className: \"viz-des-text\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, chunk.des);\n    }))));\n  }\n\n}\n\nexport default PolarPlot;","map":{"version":3,"sources":["/Users/vuluong/co2/src/components/section/viz/PolarPlot.js"],"names":["React","Component","select","scaleLinear","extent","max","min","lineRadial","curveBasis","easeQuad","easeQuadOut","easeCubic","easeCubicOut","PolarPlot","constructor","props","state","vizCreated","currentState","updateFunc","createViz","bind","vizRef","createRef","data","margin","radius","Math","window","innerWidth","innerHeight","innerRadius","grandDaddy","svg","append","attr","a","domain","range","PI","r","d","i","level","nice","totalLength","minDate","date","xDays","map","getTime","xDaysParsed","floor","rAxis","aAxis","selectAll","ticks","enter","slice","cos","sin","text","Array","_","setState","to","from","regLineLength","yReg","newText","current","querySelector","classList","add","increment","target","dataLine","datum","angle","index","curve","node","getTotalLength","transition","duration","ease","filter","on","newTotalLength","prevText","remove","decrement","console","log","componentDidMount","vizScrollObserver","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","dataset","Number","threshold","document","querySelectorAll","el","observe","render","content","chunk","des"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './PolarPlot.scss';\nimport { select,\n  scaleLinear, extent,\n  max,\n  min,\n  lineRadial,\n  curveBasis,\n  easeQuad,\n  easeQuadOut,\n  easeCubic,\n  easeCubicOut\n } from 'd3';\n\nclass PolarPlot extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      vizCreated: false,\n      currentState: -1,\n      updateFunc: null\n    }\n    this.createViz = this.createViz.bind(this)\n    this.vizRef = React.createRef()\n  }\n  createViz(data) {\n    let margin = 80,\n      radius = Math.min(window.innerWidth - 440, window.innerHeight - 200)/2,\n      innerRadius = radius - margin,\n      grandDaddy = select('#polar-plot'),\n      svg = grandDaddy.select('.viz-svg-wrap')\n      .append('svg')\n        .attr('width', radius*2)\n        .attr('height', radius*2)\n        .attr('class', 'viz'),\n      a = scaleLinear()\n      .domain([0, 365.25])\n      .range([0, 2*Math.PI]),\n      r = scaleLinear()\n      .domain([0, max(data, (d, i) => {return d.level})])\n      .range([0, innerRadius])\n      .nice(),\n      totalLength = null,\n      minDate = min(data, function(d) {return d.date}),\n      xDays = data.map(d => (d.date.getTime() - minDate.getTime())/(1000*60*60*24)),\n      xDaysParsed = xDays.map(d => Math.floor(d % 365.25))\n\n      let rAxis = svg.append('g')\n        .attr('class', 'r axis')\n        .attr('transform', 'translate(' + radius + ' ' + radius + ')'),\n      aAxis = svg.append('g')\n        .attr('class', 'a axis')\n        .attr('transform', 'translate(' + radius + ' ' + radius + ')')\n\n      rAxis.selectAll('circle')\n        .data([...r.ticks(5), 320, 340, 360, 380])\n        .enter()\n        .append('circle')\n          .attr('class', (d) => {return 'grid-circle' + ((d > 300 && d < 400) ? ' secondary' : '')})\n          .attr('r', r)\n      rAxis.append('circle')\n        .attr('class', 'grid-circle')\n        .attr('r', innerRadius)\n\n      rAxis.selectAll('text')\n        .data(r.ticks(5).slice(1))\n        .enter()\n        .append('text')\n          .attr('class', 'r tick')\n          .attr('text-anchor', 'middle')\n          .attr('alignment-baseline', 'central')\n          .attr('dx', function(d) {return r(d)*Math.cos(-Math.PI/12)})\n          .attr('dy', function(d) {return r(d)*Math.sin(-Math.PI/12)})\n          .text(function (d) {return d})\n\n      aAxis.selectAll('line')\n        .data(Array(6))\n        .enter()\n        .append('line')\n          .attr('class', 'grid-line')\n          .attr('x1', 0)\n          .attr('x2', 0)\n          .attr('y1', -innerRadius)\n          .attr('y2', innerRadius)\n          .attr('transform', function(_, i) {return 'rotate(' + (30*i) + ')'})\n\n      aAxis.selectAll('text')\n        .data(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])\n        .enter()\n        .append('text')\n          .attr('class', 'r tick')\n          .attr('text-anchor', 'middle')\n          .attr('alignment-baseline', 'central')\n          .attr('dx', function(_, i) {return (innerRadius + 24)*Math.cos((i/6 - 1/2)*Math.PI)})\n          .attr('dy', function(_, i) {return (innerRadius + 24)*Math.sin((i/6 - 1/2)*Math.PI)})\n          .text(function (d) {return d})\n\n    this.setState({\n      vizCreated: true,\n      updateFunc: (to, from) => {\n        let regLineLength = null,\n          yReg = null,\n          newText = to !== -1 ? this.vizRef.current.querySelector('.viz-des-text:nth-child(' + (to + 1) + ')') : null\n        if (to > from) {\n          if (newText) {\n            newText.classList.add('on')\n          }\n          let increment = (target) => {\n            switch(target) {\n              case 0: // Initial\n                // Main data line\n                let dataLine = svg.append('path')\n                  .datum(data.slice(0, 38))\n                  .attr('class', 'data-line')\n                  .attr('transform', 'translate(' + radius + ' ' + radius + ')')\n                  .attr('d', lineRadial()\n                    .angle(function(_, index) { return a(xDaysParsed[index]) })\n                    .radius(function(d) { return r(d.level) })\n                    .curve(curveBasis)\n                  ),\n                totalLength = dataLine.node().getTotalLength()\n                dataLine.attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\n                  .attr(\"stroke-dashoffset\", totalLength)\n                  .transition()\n                    .duration(800)\n                    .ease(easeCubic)\n                    .attr('stroke-dashoffset', 0)\n                break\n              case 1: // Linear\n                r.domain(extent(data, data => {return data.level}))\n                grandDaddy.selectAll('.grid-circle').filter((_, i) => {return i < 4}).transition()\n                  .duration(800)\n                  .ease(easeCubic)\n                  .attr('r', 0)\n                grandDaddy.selectAll('.grid-circle:nth-child(5)').transition()\n                  .duration(800)\n                  .ease(easeCubic)\n                  .attr('r', r)\n                grandDaddy.selectAll('.grid-circle.secondary').attr('class', 'grid-circle').transition()\n                  .duration(800)\n                  .ease(easeCubic)\n                  .attr('r', r)\n                grandDaddy.select('.data-line')\n                .transition()\n                  .duration(600)\n                  .ease(easeCubic)\n                  .attr('d', lineRadial()\n                    .angle(function(_, index) { return a(xDaysParsed[index]) })\n                    .radius(function(d) { return r(d.level) })\n                    .curve(curveBasis))\n                    .on(\"end\", () => {\n                      let dataLine = grandDaddy.select('.data-line')\n                      .datum(data)\n                      .attr('d', lineRadial()\n                        .angle(function(_, index) { return a(xDaysParsed[index]) })\n                        .radius(function(d) { return r(d.level) })\n                        .curve(curveBasis)),\n                      newTotalLength = dataLine.node().getTotalLength()\n                      dataLine.attr(\"stroke-dasharray\", newTotalLength + \" \" + newTotalLength)\n                        .attr(\"stroke-dashoffset\", newTotalLength)\n                        .transition()\n                          .duration(1200)\n                          .ease(easeCubic)\n                          .attr('stroke-dashoffset', 0)\n                    })\n                // let regLine = svg.append('path')\n                //   .datum(data)\n                //   .attr('class', 'reg-line')\n                //   .attr('d', line()\n                //     .x(function(d) { return x(d.date) + margin.left })\n                //     .y(function(d, i) {return y(yReg[i]) + margin.top })\n                // ),\n                // regLineLabel = svg.append('g')\n                //   .attr('class', 'reg-line-label')\n                //   .attr('transform',\n                //     'translate('\n                //     + (x(data[Math.ceil(data.length*0.52)]['date']) + margin.left + 60)\n                //     + ', '\n                //     + (y(yReg[Math.ceil(yReg.length*0.52)]) + margin.top + 20)\n                //     + ')'\n                //   )\n                // grandDaddy.select('.bottom-axis').raise()\n                // regLineLabel.style('opacity', 0)\n                //   .transition()\n                //     .duration(720)\n                //     .ease(easeQuad)\n                //     .style('opacity', 1)\n                // regLineLabel.append('rect')\n                //   .attr('class', 'reg-line-label-rect linear')\n                //   .attr('rx', 4)\n                //   .attr('ry', 4)\n                //   .style('width', '4.6em')\n                // let regLineLabelText = regLineLabel.append('text')\n                //     .attr('class', 'reg-line-label-text')\n                // regLineLabelText.append('tspan')\n                //     .attr('class', 'linear span')\n                //     .text('y = αx')\n                // regLineLength = regLine.node().getTotalLength()\n                // regLine.attr(\"stroke-dasharray\", regLineLength + \" \" + regLineLength)\n                //   .attr(\"stroke-dashoffset\", regLineLength)\n                //   .transition()\n                //     .duration(800)\n                //     .ease(easeCubicOut)\n                //     .attr('stroke-dashoffset', 0)\n                // grandDaddy.select('.data-line').attr('class', 'data-line faded')\n                // grandDaddy.selectAll('.reg-line-label-text>tspan:not(.linear)')\n                //   .each(function(d) {\n                //     let currentSpan = select(this)\n                //     if (!currentSpan.node().classList.contains('off')) {\n                //       currentSpan.node().classList.add('off')\n                //     }\n                //   })\n                break\n              // case 2: // Quadratic\n              //   yReg = xDays.map(d => this.props.content[2].params[0] + this.props.content[2].params[1]*d + this.props.content[2].params[2]*d**2)\n              //   grandDaddy.select('.reg-line').transition()\n              //     .duration(800)\n              //     .ease(easeCubicOut)\n              //     .attr('d', line()\n              //       .x(function(d) { return x(d.date) + margin.left })\n              //       .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //     )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", 0)\n              //     .attr('stroke-dashoffset', 0)\n              //   grandDaddy.select('.reg-line-label-rect')\n              //     .attr('class', 'reg-line-label-rect quadratic')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '7.7em')\n              //   grandDaddy.select('.reg-line-label-text').append('tspan')\n              //     .attr('class', 'quadratic span')\n              //     .text(' + βx\\u00b2')\n              //     .style('opacity', 0)\n              //       .transition()\n              //         .duration(800)\n              //         .ease(easeQuad)\n              //         .style('opacity', 1)\n              //   grandDaddy.selectAll('.reg-line-label-text>tspan:not(.quadratic)')\n              //     .each(function(d) {\n              //       let currentSpan = select(this)\n              //       if (!currentSpan.node().classList.contains('off')) {\n              //         currentSpan.node().classList.add('off')\n              //       }\n              //     })\n              //   break\n              // case 3: // Cosine\n              //   yReg = xDays.map(d => this.props.content[3].params[0]\n              //     + this.props.content[3].params[1]*d\n              //     + this.props.content[3].params[2]*d**2\n              //     + this.props.content[3].params[3]*Math.cos(2*Math.PI*d/365.25 + this.props.content[3].params[4])\n              //   )\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", regLineLength + \" \" + regLineLength)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .attr('d', line()\n              //         .x(function(d) { return x(d.date) + margin.left })\n              //         .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //     )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", 0)\n              //     .attr('stroke-dashoffset', 0)\n              //   grandDaddy.select('.reg-line-label-rect')\n              //     .attr('class', 'reg-line-label-rect cosine')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '15.6em')\n              //   grandDaddy.select('.reg-line-label-text').append('tspan')\n              //     .attr('class', 'cosine span')\n              //     .text(' + cos(2πt + φ)')\n              //     .style('opacity', 0)\n              //       .transition()\n              //         .duration(800)\n              //         .ease(easeQuad)\n              //         .style('opacity', 1)\n              //   grandDaddy.selectAll('.reg-line-label-text>tspan:not(.cosine)')\n              //     .each(function(d) {\n              //       let currentSpan = select(this)\n              //       if (!currentSpan.node().classList.contains('off')) {\n              //         currentSpan.node().classList.add('off')\n              //       }\n              //     })\n              //   break\n              default:\n            }\n          }\n          for (let i = from; i < to; i++) {\n            let prevText = this.vizRef.current.querySelector('.viz-des-text:nth-child(' + (i + 1) + ')')\n            increment(i + 1)\n            if (prevText) {\n              prevText.classList.remove('on')\n              prevText.classList.remove('on-reverse')\n            }\n          }\n        } else if (to < from) {\n          if (newText) {\n            newText.classList.add('on-reverse')\n          }\n          let decrement = (target) => {\n            console.log(target)\n            switch(target) {\n              // case -1:\n              //   let dataLineLength = grandDaddy.select('.data-line').node().getTotalLength()\n              //   grandDaddy.select('.data-line').attr('stroke-dashoffset', 0)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .attr('stroke-dashoffset', -dataLineLength)\n              //       .remove()\n              //   break\n              // case 0: // Initial\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr('stroke-dashoffset', 0)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .attr('stroke-dashoffset', -regLineLength)\n              //       .remove()\n              //   grandDaddy.select('.data-line').attr('class', 'data-line')\n              //   grandDaddy.select('.reg-line-label').style('opacity', 1)\n              //     .transition()\n              //       .duration(800)\n              //       .ease(easeCubicOut)\n              //       .style('opacity', 0)\n              //       .remove()\n              //   break\n              // case 1: // Linear\n              //   yReg = xDays.map(d => this.props.content[1].params[0] + this.props.content[1].params[1]*d)\n              //   grandDaddy.select('.reg-line').transition()\n              //     .duration(800)\n              //     .ease(easeCubicOut)\n              //     .attr('d', line()\n              //       .x(function(d) { return x(d.date) + margin.left })\n              //       .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //   )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", regLineLength + \" \" + regLineLength)\n              //   grandDaddy.select('.reg-line-label-text>.quadratic.span').style('opacity', 1)\n              //     .transition()\n              //       .duration(320)\n              //       .ease(easeCubicOut)\n              //       .style('opacity', 0)\n              //       .remove()\n              //   grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect linear')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '4.6em')\n              //   setTimeout(() => {\n              //     grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect linear')\n              //   })\n              //   grandDaddy.select('.reg-line-label-text>.linear.span').attr('class', 'linear span on')\n              //   break\n              // case 2: // Quadratic\n              //   yReg = xDays.map(d => this.props.content[2].params[0]\n              //     + this.props.content[2].params[1]*d\n              //     + this.props.content[2].params[2]*d**2)\n              //   grandDaddy.select('.reg-line').transition()\n              //     .duration(800)\n              //     .ease(easeCubicOut)\n              //     .attr('d', line()\n              //       .x(function(d) { return x(d.date) + margin.left })\n              //       .y(function(d, i) {return y(yReg[i]) + margin.top })\n              //   )\n              //   regLineLength = grandDaddy.select('.reg-line').node().getTotalLength()\n              //   grandDaddy.select('.reg-line').attr(\"stroke-dasharray\", regLineLength + \" \" + regLineLength)\n              //   grandDaddy.select('.reg-line-label-text>.cosine.span').style('opacity', 1)\n              //     .transition()\n              //       .duration(320)\n              //       .ease(easeCubicOut)\n              //       .style('opacity', 0)\n              //       .remove()\n              //   grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect quadratic')\n              //     .transition()\n              //       .duration(600)\n              //       .ease(easeCubicOut)\n              //       .style('width', '7.7em')\n              //   setTimeout(() => {\n              //     grandDaddy.select('.reg-line-label-rect').attr('class', 'reg-line-label-rect quadratic')\n              //   })\n              //   grandDaddy.select('.reg-line-label-text>.quadratic.span').attr('class', 'quadratic span on')\n              //   break\n              default:\n            }\n          }\n          for (let i = from; i > to; i--) {\n            let prevText = this.vizRef.current.querySelector('.viz-des-text:nth-child(' + (i + 1) + ')')\n            console.log('hey')\n            decrement(i - 1)\n            if (prevText) {\n              prevText.classList.remove('on')\n              prevText.classList.remove('on-reverse')\n            }\n          }\n        }\n        this.setState({\n          currentState: to\n        })\n      }\n    })\n  }\n  componentDidMount() {\n    this.createViz(this.props.data)\n    // let vizObserver = new IntersectionObserver(\n    //   (entries, observer) => {\n    //     if (entries[0].isIntersecting && !this.state.vizCreated) {\n    //       this.setState({\n    //         vizCreated: true\n    //       }, () => {\n    //         this.createViz(this.props.data)\n    //       })\n    //     }\n    //   },\n    //   {\n    //     rootMargin: '0 0 -70%',\n    //     threshold: 0\n    //   })\n    // vizObserver.observe(this.vizRef.current)\n\n    let vizScrollObserver = new IntersectionObserver(\n      (entries, observer) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            let index = entry.target.dataset.index\n            console.log(index)\n            if (!this.state.vizCreated) {\n              this.createViz(this.props.data)\n            }\n            this.state.updateFunc(Number(index), this.state.currentState)\n          }\n        })\n      },\n      {\n        threshold: 0\n      }\n    )\n    document.querySelectorAll('.viz-scroll-anchor').forEach(el => {\n      vizScrollObserver.observe(el)\n    })\n  }\n  render() {\n    return (\n      <div id=\"polar-plot\" className=\"viz-outer-wrap\" ref={this.vizRef}>\n        <div className=\"viz-scroll-box\">\n          <div className=\"viz-scroll-anchor\" data-index=\"-1\"></div>\n          {this.props.content.map((_, index) => {\n            return (\n              <div className=\"viz-scroll-anchor\" data-index={index} key={index}></div>\n            )\n          })}\n          <div className=\"viz-scroll-dummy-anchor\"></div>\n        </div>\n        <div className=\"viz-wrap\" id=\"line-chart\">\n          <div className=\"viz-svg-wrap\"></div>\n          <div className=\"viz-des-wrap\">\n            {this.props.content.map((chunk, index) => {\n              return (\n                <p className=\"viz-des-text\" key={index}>{chunk.des}</p>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PolarPlot;\n"]},"metadata":{},"sourceType":"module"}